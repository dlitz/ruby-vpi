= Release history

This document is a record of important changes that have occurred with each release of Ruby-VPI.

= Version 0.6 (2006-05-24)

== Summary

This major release adds a comprehensive user manual, upgrades from make to Rake[http://rspec.rubyforge.org], and improves the test generation tool.

== Details

* A comprehensive user manual, written in DocBook-XML, has been added.

* Rake has replaced the role of +make+. All makefiles have been converted accordingly.

* The test generation tool now generates multiple files (runner, bench, design, spec) and makes backups of existing files. See its help information for details.

* Support for RSpec 0.5.4 has been added.

* The counter example now makes use of RSpec.

* Tested and developed using:
  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

== Acknowledgment

* Thanks to Jose Renau for solving the problem of strange delays that occurred whenever a design was reset.

= Version 0.5 (2006-05-13)

== Summary

This release adds a tool which generates test benches, and adds support for {Behavior Driven Development}[http://behaviour-driven.org] via the RSpec[http://rspec.rubyforge.org] library.

== Details

* A tool, which generates most of a Ruby-VPI test bench from a Verilog 2001 module declaration, has been added.

* Ability to use RSpec in a test bench has been added.

* Ability to specify arbitrary command-line arguments to Verilog simulators has been added in the examples' makefile template.

* Tested and developed using:
  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

== Acknowledgment

* Thanks to Scott L Holmes for helping me {use the RSpec library without its runner}[http://article.gmane.org/gmane.comp.lang.ruby.general/150087] program.

= Version 0.4 (2006-04-28)

== Summary

This release adds simple ways of reading and writing values to VPI handles, adds documentation for the VPI utility layer, and fixes the pipelined ALU example.

== Details

* Simple, consistent ways of reading and writing values to handles have been added to the VPI utility layer. These ways are described in the SWIG::TYPE_p_unsigned_int class' documentation.

* The makefiles now use the +rbconfig+ library to determine the default compiler and linker flags for Ruby.

* A race condition in the pipelined ALU example has been fixed. This example should now run successfully in all Verilog simulators.

* The project wiki has been abandoned in favor of RDoc.

* The project website is now generated by RDoc.

* Tested and developed using:
  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

= Version 0.3 (2006-04-23)

== Summary

This release adds support for the _entire_ IEEE Std. 1364-2005 VPI interface, and updates the examples into unit tests.

== Details

* The Ruby interface to VPI is now generated by SWIG[http://www.swig.org].

* The {"final ballot" version}[http://www.boydtechinc.com/ptf/archive/ptf_2005/0737.html] of the <tt>vpi_user.h</tt> header file is now packaged along with and used by Ruby-VPI.

* The VPI module, its sub-classes, and its functionality have been replaced by the VPI utility layer (see <tt>src/vpi_util.rb</tt>).

* The examples now make use of the 'test/unit' unit testing framework.

* The makefiles for the examples have been simplified through the use of a common template.
  * The 'vsim' target for Mentor Modelsim has been renamed to 'msim'.

* Tested and developed using:
  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

== Acknowledgment

* Thanks to the {SWIG developers}[http://www.swig.org/guilty.html] for making this project <em>much</em> easier! ;-)

= Version 0.2 (2006-04-17)

== Summary

This release fixes major bugs, adds support for Mentor Modelsim, and removes the <tt>$ruby_task</tt> callback.

== Details

* The "cross-thread violation on rb_gc()" error has been fixed.
  * The "stack level too deep (SystemStackError)" error has been fixed.
  * The 'test/unit' library can be used in Ruby test bench.
  * Mentor Modelsim Verilog simulator works with Ruby-VPI.

* Removed <tt>$ruby_task</tt> callback and ability to dynamically register system tasks from Ruby because inter-process communication is complicated at present.

* Added piplelined ALU example.

* Tested and developed using:
  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Modelsim 6.1d on x86_64 GNU/Linux
  * Ruby 1.8.4 and Synopsys VCS-MX X-2005.06-SP1 on SPARC4 SunOS 5.10

== Acknowledgment

* Thanks to Nobu Nakada for explaining the {"cross-thread violation on rb_gc()"}[http://article.gmane.org/gmane.comp.lang.ruby.general/146653] error.

= Version 0.1 (2006-02-26)

== Summary

This release adds enough Verilog VPI functionality to make Ruby-VPI usable for simple test benches:
* access Verilog objects through VPI handles
* read and change VPI handle values
* stop, finish, restart the simulation

== Details

* Implemented some Verilog VPI functionality:
  * VPI::handle_by_name(string, VPI::Handle) -> VPI::Handle
  * VPI::handle_by_name(string) -> VPI::Handle

  * VPI::Handle#put_value(integer)
  * VPI::Handle#value = integer

  * VPI::Handle#get_value -> integer
  * VPI::Handle#value -> integer

  * VPI::stop
  * VPI::finish
  * VPI::reset

* Implemented some additional functionality:
  * VPI::register_task(string, &proc)

* Added ability to pass arbitrary command-line arguments to the Ruby interpreter (using <tt>$ruby_init</tt>). Now you can invoke any Ruby script you want, instead of <tt>pli_init.rb</tt>.

* Added ability to dynamically register system tasks from Ruby, using <tt>VPI::register_task("task name")</tt>, and call them from Verilog, using <tt>$ruby_task("task name")</tt>.

* Added <tt>VPI::Handle</tt> class which encapsulates a <tt>vpiHandle</tt> VPI object.

* Tested and developed using:
  * Ruby 1.8.2 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4, Synopsys VCS X-2005.06, and Mentor Modelsim 6.1b on i686 GNU/Linux

== Acknowledgment

* Thanks to Jose Renau for helping me debug how Synopsys VCS works with Verilog VPI. The problem was that VCS required calltf signatures to be <tt>void (*)(void)</tt>, whereas the Verilog standard defines a calltf signature as <tt>PLI_INT32 (*)(PLI_BYTE8*)</tt>.

* Thanks to Ross Bamford, Eric Hodel, and Yukihiro Matsumoto for {helping me discover}[http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/180662] why the SystemStackError was happening.

= Version 0.0 (1999-10-31)

== Summary

This is Kazuhiro HIWADA's initial testing release of Ruby-VPI. See the original announcement[http://www.ruby-talk.org/cgi-bin/scat.rb/ruby/ruby-list/18193] and {source code}[http://easter.kuee.kyoto-u.ac.jp/~hiwada/ruby/memo/src/ruby-vpi-test.tgz].

== Details

* Added ability to relay control from Verilog test bench to Ruby (using <tt>$ruby_callback</tt>) and vice versa (using <tt>PLI::relay_verilog</tt>).

* Tested and developed using Ruby 1.4 and Verilog-XL from Cadence systems, on a SPARC machine running Solaris 2.6.

