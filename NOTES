Icarus Verilog 0.8
------------------

vpi_handle_by_name() requires the full path (including the test-bench which instantiates a module) to a Verilog object. For example, in the example test bench below, you need to specify "TestFoo.my_foo.clk" instead of "my_foo.clk" in order to access the "clk" input of the "my_foo" module instance. Also, you can access the "clk_reg" register via "TestFoo.clk_reg".

	module TestFoo;
		reg clk_reg;
		Foo my_foo(.clk(clk_reg));
	endmodule;


vpi_control(vpiReset) causes an assertion within Icarus to fail. As a result, the simulation terminates and a core dump is produced.



Mentor ModelSim
---------------

This simulator doesn't play nicely with an embedded Ruby interpreter. When the ruby_run() (which starts the Ruby interpreter) function is invoked, the entire simulator process terminates with an exit status of 0. Whereas with Icarus Verilog, the ruby_run() function works just fine.



Ruby
----

If a "stack level too deep (SystemStackError)" during the simulation, then increase the system-resource limit for stack-size by running the 'ulimit' command before starting the simulation:

	$ ulimit -s unlimited
	$ ..your simulation..

