/*
	Copyright 2006 Suraj Kurapati
	Copyright 1999 Kazuhiro HIWADA

	This file is part of Ruby-VPI.

	Ruby-VPI is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

	Ruby-VPI is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

	You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#ifndef VLOG_CIN
#define VLOG_CIN

	#include <assert.h>
	#include "common.h"
	#include "verilog.h"
	#include "relay.hin"
	#include "RVPI.hin"
	#include "vlog.hin"


	verilog_tf_funcSig(vlog_ruby_relay) {
		// transfer control to ruby
		common_printf("verilog -> ruby");
		relay_ruby();


		// transfer control to verilog
		common_printf("ruby -> verilog");
		verilog_tf_funcReturn(0);
	}

	verilog_tf_funcSig(vlog_ruby_init) {
		// setup control transfer mechanism
		relay_init();


		// start ruby interpreter
		relay_ruby_run();


		verilog_tf_funcReturn(0);
	}

	#ifndef SYNOPSYS_VCS
		static void vlog_bind_task(PLI_BYTE8* aTaskName, verilog_tf_funcPtr(aTaskDef)) {
			s_vpi_systf_data tf;

			tf.type = vpiSysTask;
			tf.sysfunctype = 0;
			tf.tfname = aTaskName;
			tf.calltf = (verilog_tf_funcPtr_strict())aTaskDef;
			tf.compiletf = NULL;
			tf.sizetf = NULL;
			tf.user_data = NULL;

			vpi_register_systf(&tf);
		}

		/**
			Binds the default VPI tasks (provided by Ruby-VPI) before the Verilog simulator begins to simulate.
		*/
		static void vlog_startup() {
			vlog_bind_task("$ruby_init", vlog_ruby_init);
			vlog_bind_task("$ruby_relay", vlog_ruby_relay);
		}

		void (*vlog_startup_routines[])() = { vlog_startup, 0 };
	#endif

#endif
